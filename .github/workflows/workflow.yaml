name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Choose version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

  # pull_request:
  #   branches:
  #     - main
  # push:
  #   branches:
  #     - main

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 21]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

  version:
    needs: check
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.bump_version.outputs.NEW_VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0 # Fetch all history for tagging

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Bump Version and Tag
        id: bump_version
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          git config --global user.name "quilon-ci"
          git config --global user.email "quilon-ci@quilon-tool.com"
          git commit -am "chore(release): bump version to $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git main --tags
  publish:
    needs: version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run build

      # - name: Publish to NPM
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
