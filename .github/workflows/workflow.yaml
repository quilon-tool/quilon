name: CI & Publish to NPM

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - "v*.*.*" # Only trigger for version tags like v1.2.3

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 21]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      - name: Debug GitHub Event
        run: echo "Event: ${{ github.event_name }}, Ref: ${{ github.ref }}, Ref Type: ${{ github.ref_type }}"

      - name: Debug GitHub Ref
        run: echo "GitHub ref: ${{ github.ref }}"

  publish:
    needs: check
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v') &&
      github.ref_type == 'tag'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org/"

      - name: Extract version from tag
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Read current package.json version
        id: package-version
        run: echo "CURRENT_VERSION=$(node -p 'require(\"./package.json\").version')" >> $GITHUB_ENV

      # - name: Validate tag version
      #   run: |
      #     echo "Current package.json version: $CURRENT_VERSION"
      #     echo "Git tag version: $TAG_VERSION"

      #     if [ "$(printf "%s\n%s" "$CURRENT_VERSION" "$TAG_VERSION" | sort -V | head -n1)" != "$CURRENT_VERSION" ]; then
      #       echo "✅ Tag version is valid (higher than current version)"
      #     else
      #       echo "❌ ERROR: Tag version ($TAG_VERSION) is lower than or equal to the current version ($CURRENT_VERSION)."
      #       exit 1
      #     fi

      # - name: Update package.json version
      #   run: npm version --no-git-tag-version $TAG_VERSION

      # - name: Install dependencies
      #   run: npm install

      # - name: Build package
      #   run: npm run build

      # - name: Publish to NPM
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
